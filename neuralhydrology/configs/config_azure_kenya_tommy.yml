# --- Experiment configurations --------------------------------------------------------------------

# experiment name, used as folder name
experiment_name: azure_nh_kenya

# place to store run directory (if empty runs are stored in code_dir/runs/)
run_dir: /datadrive/data/runs

# files to specify training, validation and test basins (relative to code root or absolute path)
train_basin_file: /home/leest/neuralhydrology/data/pixels.txt
validation_basin_file: /home/leest/neuralhydrology/data/pixels.txt
test_basin_file: /home/leest/neuralhydrology/data/pixels.txt

# training, validation and test time periods (format = 'dd/mm/yyyy')
train_start_date: '31/01/2000'
train_end_date: '31/12/2015'
validation_start_date: '31/10/2014'
validation_end_date: '30/09/2015'
test_start_date: '31/01/2016'
test_end_date: '31/12/2020'

# if you want to use different (continuous or split) periods per basin (and period) define path to pickle files here.
per_basin_train_periods_file:
per_basin_validation_periods_file:
per_basin_test_periods_file:

# fixed seed, leave empty to use a random seed
seed: 1

# which GPU (id) to use [in format of cuda:0, cuda:1 etc, or cpu or None]
device: cuda:0

# --- Model configuration --------------------------------------------------------------------------

# base model type [cudalstm, customlstm, ealstm, embcudalstm, mtslstm, gru, transformer]
# (has to match the if statement in modelzoo/__init__.py)
model: cudalstm

# prediction head [regression]. Define the head specific parameters below
head: regression

# ----> Regression settings <----
output_activation: linear

# ----> General settings <----

# Number of cell states of the LSTM
hidden_size: 64

# Initial bias value of the forget gate
initial_forget_bias: 3

# Dropout applied to the output of the LSTM
output_dropout: 0.4

# --- Training configuration -----------------------------------------------------------------------

# specify optimizer [Adam]
optimizer: Adam

# specify loss [MSE, NSE, RMSE]
loss: MSE

# specify learning rates to use starting at specific epochs (0 is the initial learning rate)
learning_rate:
    0: 1e-3
    10: 5e-4
    20: 1e-4

# Mini-batch size
batch_size: 256

# Number of training epochs
epochs: 30

# adds noise with given std to the labels during training. Leave empty or set to 0 if not used.
target_noise_std: 0.005

# If a value, clips the gradients during training to that norm.
clip_gradient_norm: 1

# Defines which time steps are used to calculate the loss. Can't be larger than seq_length.
predict_last_n: 1

# Length of the input sequence
# If use_frequencies is used, this needs to be a dict mapping each frequency to a seq_length, else an int.
seq_length: 4

# Number of parallel workers used in the data pipeline
num_workers: 4

# Save model weights every n epochs
save_weights_every: 1

# --- Data configurations --------------------------------------------------------------------------

# which data set to use [camels_us, camels_gb, global, hourly_camels_us, camels_cl, generic, pixel]
dataset: pixel

# Path to data set root
data_dir: /home/tommy/spatio_temporal/data

# Set to True, if train data file should be save to disk. If empty or False, train data is not saved.
save_train_data: False

# If existing train data file exist, specify path to the pickle file here
dynamic_nc_file: /DataDrive200/data/kenya_data_monmean.nc
static_nc_file: 
pixel_dims: 
  - lat
  - lon

# Forcing product [daymet, maurer, maurer_extended, nldas, nldas_extended, nldas_hourly]
# can be either a list of forcings or a single forcing product
forcings: 

# variables to use as time series input (names match the data file column headers)
# Note: In case of multiple input forcing products, you have to append the forcing product behind
# each variable. E.g., 'prcp(mm/day)' of the daymet product is 'prcp(mm/day)_daymet'
# To use different dynamic inputs per frequency, this variable must contain a dict mapping each frequency to its
# list of variables. E.g., to use precipitation from daymet for daily and from nldas_hourly for hourly predictions:
#   1D:
#     - prcp(mm/day)_daymet
#   1H:
#     - total_precipitation_nldas_hourly
dynamic_inputs:
  - t2m
  - tp
  - swvl1

# which columns to use as target
target_variables:
  - modis_vci

# clip negative predictions to zero for all variables listed below. Should be a list, even for single variables.
clip_targets_to_zero:

# Which CAMELS attributes to use. Leave empty if none should be used
static_attributes:

  # Path to pickle file(s) containing additional data. Each pickle file must contain a dictionary
# with one key for each basin and the value is a time indexed data frame, where each column is a 
# feature.
# Convention: If a column is used as static input, the value to use for specific sample should be in
# same row (datetime) as the target discharge value.
additional_feature_files:

# columns of the data frame to use as (additional) "static" inputs for each sample. Must be present in
# the above linked additional feature files. These values will be used as static inputs, but they can evolve over time.
# Leave empty to not use any.
evolving_attributes:

# whether to use basin id one hot encoding as (additional) static input
use_basin_id_encoding: False